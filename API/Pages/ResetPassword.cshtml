@page "/ResetPassword"
@model API.Pages.ResetPasswordModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>

    <!-- Include Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css">
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f8f9fa; /* Bootstrap default background color */
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 600px;
            margin: 50px auto;
            background-color: #ffffff; /* White background */
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        h1 {
            color: #007bff; /* Bootstrap primary color */
            margin-bottom: 30px;
            text-align: center;
        }

        .form-control.invalid {
            border-color: red;
        }

        .form-control.valid {
            border-color: #ced4da; /* Bootstrap default border color */
        }

        .form-group {
            margin-bottom: 20px;
        }

        .btn-reset {
            background-color: #007bff; /* Bootstrap primary color */
            color: #ffffff;
            transition: background-color 0.3s ease;
        }

            .btn-reset:hover {
                background-color: #0056b3; /* Darker shade on hover */
            }

        .thanks-text {
            font-size: 18px;
            font-weight: bold;
            color: goldenrod; /* Bootstrap primary color */
            margin-bottom: 10px;
            text-align: center;
        }
        .error-message {
            color: #dc3545; /* Bootstrap danger color */
            margin-top: 10px;
        }

        .thank-you-message {
            text-align: center;
            margin-top: 20px;
            color: #28a745; /* Bootstrap success color */
        }

        .contact-info {
            margin-top: 30px;
            text-align: center;
            color: #777;
        }

        .facebook-link {
            color: #007bff;
        }

        .password-validation {
            display: flex;
            flex-direction: column;
            margin-top: 10px;
            font-size: 14px;
        }

            .password-validation p::before {
                content: '\2022'; /* Bullet point */
                margin-right: 5px;
                color: #007bff; /* Bullet point color */
            }

            .password-validation p.valid {
                color: green;
            }

            .password-validation p.invalid {
                color: red;
            }

        

    </style>
</head>

<body>
    <div class="container">
        <h1>Reset Your Password</h1>
        <form id="resetPasswordForm" action="/api/authentication/resetpassword" method="post">
            <div class="form-group">
                <label for="NewPassword">New Password</label>
                <input type="password" class="form-control" name="NewPassword" id="NewPassword" required />
                <div class="password-validation">
                    <p id="uppercase" class="invalid">At least one uppercase character</p>
                    <p id="lowercase" class="invalid">At least one lowercase character</p>
                    <p id="number" class="invalid">At least one number</p>
                    <p id="special" class="invalid">At least one special character</p>
                    <p id="length" class="invalid">Minimum length 8 characters</p>
                </div>
            </div>
            <div class="form-group">
                <label for="ConfirmPassword">Confirm Password</label>
                <input type="password" class="form-control" name="ConfirmPassword" id="ConfirmPassword" required />
                <div class="error-message" id="passwordMismatchError" style="display:none;">Password and confirmation do not match.</div>
            </div>
             <div class="form-group">
                <input type="hidden" name="Token" value="@Request.Query["Token"]" />
                <input type="hidden" name="Email" value="@Request.Query["Email"]" />
            </div>
            <div class="form-group text-center">
                <button type="button" class="btn btn-reset" id="resetPasswordBtn" onclick="validatePasswords()" disabled>Reset Password</button>
            </div>
        </form>

        <div class="thanks-text">
            <p>Thank you for using the Electronic Mind of Alzheimer Patient.</p>
           
        </div>

        <div class="contact-info">
            <p>The Electronic Mind of Alzheimer Patient Team</p>
            <p>Contact us at:</p>
            <a href="https://www.facebook.com/ArtOfCoding339" class="facebook-link" target="_blank">Facebook Page</a>
        </div>
    </div>

    <!-- Include Bootstrap JS and Popper.js -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function validatePasswords() {
            var newPassword = document.getElementById('NewPassword').value;
            var confirmPassword = document.getElementById('ConfirmPassword').value;
            var errorDiv = document.getElementById('passwordMismatchError');

            if (newPassword !== confirmPassword) {
                errorDiv.style.display = 'block';
            } else {
                errorDiv.style.display = 'none';
                document.getElementById('resetPasswordForm').submit();
            }
        }

        function checkPasswordCriteria(password) {
            const uppercaseRegex = /[A-Z]/;
            const lowercaseRegex = /[a-z]/;
            const numberRegex = /[0-9]/;
            const specialCharRegex = /[!$%^&*(),.?":{}|<>#@@]/;

            return {
                uppercase: uppercaseRegex.test(password),
                lowercase: lowercaseRegex.test(password),
                number: numberRegex.test(password),
                specialChar: specialCharRegex.test(password),
                length: password.length >= 8
            };
        }

        function updateValidation() {
            const newPassword = document.getElementById('NewPassword').value;
            const errorDiv = document.getElementById('passwordMismatchError');
            const resetPasswordBtn = document.getElementById('resetPasswordBtn');

            const criteria = checkPasswordCriteria(newPassword);

            errorDiv.style.display = 'none';
            resetPasswordBtn.disabled = false;

            updateValidationMessage('uppercase', criteria.uppercase);
            updateValidationMessage('lowercase', criteria.lowercase);
            updateValidationMessage('number', criteria.number);
            updateValidationMessage('special', criteria.specialChar);
            updateValidationMessage('length', criteria.length);


            if (!Object.values(criteria).every(value => value)) {
                resetPasswordBtn.disabled = true;
            }
        }

        function updateValidationMessage(id, isValid) {
            const messageElement = document.getElementById(id);
            messageElement.classList.remove('valid', 'invalid');
            messageElement.classList.add(isValid ? 'valid' : 'invalid');
        }

        document.getElementById('NewPassword').addEventListener('input', updateValidation);
        document.getElementById('NewPassword').addEventListener('focus', updateValidation);
    </script>
</body>
</html>
